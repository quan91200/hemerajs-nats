import hp from 'hemera-plugin'
import { createdPostSchema, deletedPostSchema } from '../schemas/post.schema.js'
import { createPost, listPosts, deletePost } from '../services/post.service.js'

const postPlugin = hp((hemera, opts, done) => {
    // Hi·ªÉn th·ªã PID ƒë·ªÉ ki·ªÉm tra Load Balancing
    console.log(`User Plugin loaded on PID: ${process.id}`)
    // T·∫°o b√†i vi·∫øt
    hemera.add(
        { topic: 'post', cmd: 'create', schema: createdPostSchema },
        async (req, reply) => {
            try {
                const post = await createPost(req)
                hemera.log.info(`üü¢ T·∫°o b√†i vi·∫øt: ${post.title}`)
                return post
            } catch (err) {
                hemera.log.error(`‚ùå L·ªói khi t·∫°o b√†i vi·∫øt:`, err)
                reply({
                    error: 'CREATE_POST_FAILED',
                    message: 'L·ªói khi t·∫°o b√†i vi·∫øt. Vui l√≤ng th·ª≠ l·∫°i sau.'
                })
            }
        }
    )
    // Danh s√°ch b√†i vi·∫øt
    hemera.add({ topic: 'post', cmd: 'list' }, async (req, reply) => {
        try {
            const posts = await listPosts()
            hemera.log.info(`üìã Danh s√°ch b√†i vi·∫øt: ${posts.length} b√†i vi·∫øt`)
            return posts
        } catch (err) {
            hemera.log.error(`‚ùå L·ªói khi l·∫•y danh s√°ch b√†i vi·∫øt:`, err)
            reply({
                error: 'LIST_POSTS_FAILED',
                message: 'L·ªói khi l·∫•y danh s√°ch b√†i vi·∫øt. Vui l√≤ng th·ª≠ l·∫°i sau.'
            })
        }
    })
    // Danh s√°ch b√†i vi·∫øt c·ªßa ng∆∞·ªùi d√πng theo userId
    hemera.add(
        { topic: 'post', cmd: 'listByUser' },
        async (req, reply) => {
            try {
                const posts = await listPostsByUser(req.userId)
                hemera.log.info(`üìã Danh s√°ch b√†i vi·∫øt c·ªßa ng∆∞·ªùi d√πng ID ${req.userId}: ${posts.length} b√†i vi·∫øt`)
                return posts
            } catch (err) {
                hemera.log.error(`‚ùå L·ªói khi l·∫•y danh s√°ch b√†i vi·∫øt c·ªßa ng∆∞·ªùi d√πng: ${err.message}`, err)
                reply({
                    error: 'LIST_POSTS_BY_USER_FAILED',
                    message: 'L·ªói khi l·∫•y danh s√°ch b√†i vi·∫øt c·ªßa ng∆∞·ªùi d√πng. Vui l√≤ng th·ª≠ l·∫°i sau.',
                    details: err.message  // Tr·∫£ l·∫°i th√¥ng tin l·ªói chi ti·∫øt
                })
            }
        }
    )
    // X√≥a b√†i vi·∫øt
    hemera.add(
        { topic: 'post', cmd: 'delete', schema: deletedPostSchema },
        async (req, reply) => {
            try {
                const post = await deletePost(req)
                hemera.log.info(`üóë X√≥a b√†i vi·∫øt: ${post.title}`)
                return post
            } catch (err) {
                hemera.log.error(`‚ùå L·ªói khi x√≥a b√†i vi·∫øt:`, err)
                reply({
                    error: 'DELETE_POST_FAILED',
                    message: 'L·ªói khi x√≥a b√†i vi·∫øt. Vui l√≤ng th·ª≠ l·∫°i sau.'
                })
            }
        }
    )
    done()
})

export default postPlugin